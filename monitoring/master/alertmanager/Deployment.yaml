apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      name: alertmanager
      labels:
        app: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: prom/alertmanager:latest
#        args:
#          - "--config.file=/etc/alertmanager/config.yml"
#          - "--storage.path=/alertmanager"
        ports:
        - name: alertmanager
          containerPort: 9093
#        resources:
#            requests:
#              cpu: 500m
#              memory: 500M
#            limits:
#              cpu: 1
#              memory: 1Gi
        volumeMounts:
#        - name: config-volume
#          mountPath: /etc/alertmanager
#        - name: templates-volume
#          mountPath: /etc/alertmanager-templates
#        - name: alertmanager
#          mountPath: /alertmanager
#      volumes:
#      - name: config-volume
#        configMap:
#          name: alertmanager-config
#      - name: templates-volume
#        configMap:
#          name: alertmanager-templates
#      - name: alertmanager
#        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: monitoring
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9093'
spec:
  selector:
    app: alertmanager
  ports:
  - name: "http"
    port: 9093
    protocol: TCP
    targetPort: 9093
---
apiVersion: extensions/v1beta1
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
#    kubernetes.io/tls-acme: "true"
#    ingress.kubernetes.io/force-ssl-redirect: "true"
  name: alertmanager
  namespace: monitoring

spec:
#  backend:
#    serviceName: fake-smtp-server
#    servicePort: 1080
#  defaultBackend:
#    service:
#      name: fake-smtp-server
#      port:
#        number: 1080
  rules:
#    http:
#      paths:
#      - backend:
#          serviceName: kibana
#          servicePort: 5601
#        path: /
 # tls:
 # - hosts:
 #   - kibana.itsecforu.ru
 #   secretName: ingress-secret   // This can be created prior if using custom certs
#  - http:
#      paths:
#      - path: /server
#        pathType: Prefix
#        backend:
#          service:
#            name: fake-smtp-server
#            port:
#              number: 1080
  - http:
      paths:
      - path: /alertnamager
        pathType: Prefix
        backend:
          service:
            name: alertmanager
            port:
              number: 9093
