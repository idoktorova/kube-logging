---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 300Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - image: grafana/grafana:latest
          imagePullPolicy: IfNotPresent
          name: grafana
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
#          resources:
#            limits:
#              memory: 4Gi
#            requests:
#              cpu: 100m
#              memory: 2Gi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana
#            - mountPath: /etc/grafana
#              name: grafana-config
      volumes:
        - name: grafana
          persistentVolumeClaim:
            claimName: grafana
#        - name: grafana-config
#          configMap:
#            name: grafana-config
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http-grafana
  selector:
    app: grafana
---
#apiVersion: extensions/v1beta1
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
#    kubernetes.io/tls-acme: "true"
#    ingress.kubernetes.io/force-ssl-redirect: "true"
  name: grafana
  namespace: monitoring 

spec:
  rules:
#    http:
#      paths:
#      - backend:
#          serviceName: kibana
#          servicePort: 5601
#        path: /
 # tls:
 # - hosts:
 #   - kibana.itsecforu.ru
 #   secretName: ingress-secret   // This can be created prior if using custom certs
  - http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000

